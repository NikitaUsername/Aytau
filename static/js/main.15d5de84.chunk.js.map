{"version":3,"sources":["reportWebVitals.js","views/Booking/BookingComplete.js","App.js","index.js","views/Title.js","Stores/BookingCompleteStore.js","Stores/BookingStore.js","Stores/storesContext.js","useStores.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BookingComplete","observer","props","store","useStores","BookingCompleteStore","search","useLocation","id","URLSearchParams","get","useEffect","checkBooking","className","Title","mainTitle","booking","bookingComplete","statusId","onClick","completeBooking","Footer","Layout","Content","Booking","React","lazy","DefaultHeader","App","Suspense","fallback","exact","path","style","backgroundColor","moment","locale","ReactDOM","render","StrictMode","ruRU","height","document","getElementById","toUpperCase","undefined","cipherId","a","body","axios","post","response","console","log","data","success","makeAutoObservable","this","require","BookingStore","stage","minDate","startOf","add","toDate","startDate","endDate","nights","adults","children","room","personInfo","name","surname","fathersName","email","phone","comment","transfer","childrenOptions","adultsOptions","enableButton","hideAlert","rooms","range","key","changeStartDate","value","days","diff","tommorow","utc","updateRange","changeEndDate","changeRange","checkEnableButton","changeAdults","arr","i","push","changeChildren","changeNights","Math","round","findRooms","start","end","chooseRoom","goToStage","stageNo","changeValue","field","setTransfer","e","target","checked","checkFields","replace","length","match","sendBookingRequest","totalAmount","price","storesContext","createContext","useContext"],"mappings":"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","file":"static/js/main.15d5de84.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, Spin } from 'antd';\r\nimport { observer } from 'mobx-react';\r\nimport { useStores } from '../../useStores';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Title from '../Title';\r\n\r\n\r\nconst BookingComplete = observer((props) => {\r\n\r\n    let store = useStores().BookingCompleteStore;\r\n    const { search } = useLocation();\r\n    let id = new URLSearchParams(search).get('booking');\r\n\r\n    useEffect(() => {\r\n        store.checkBooking(id);\r\n    }, [store])\r\n\r\n    return (\r\n        <div className=\"container-xxl\">\r\n            <Title mainTitle={'подтверждение аренды'} />\r\n            <Row className='row contentMain'>\r\n                {!store.booking ?\r\n                    <Spin />\r\n                    :\r\n                    <Col>\r\n                        {\r\n                            store.bookingComplete ?\r\n                                <p>Ваша аренда успешно подтверждена!</p>\r\n                                :\r\n                                <div>\r\n                                    {store.booking.statusId === 3 ?\r\n                                        <Button onClick={() => store.completeBooking(id)}>\r\n                                            Подтвердить аренду\r\n                                        </Button> :\r\n                                        <p>\r\n                                            Страница не найдена\r\n                                        </p>\r\n                                    }\r\n                                </div>\r\n                        }\r\n                    </Col>\r\n                }\r\n            </Row>\r\n        </div >\r\n    );\r\n});\r\n\r\nexport default BookingComplete;","import { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { Layout } from 'antd';\r\nimport './App.less';\r\nimport BookingComplete from \"./views/Booking/BookingComplete\";\r\n\r\nconst { Footer, Content } = Layout;\r\n\r\n\r\nconst Booking = React.lazy(() => import('./views/Booking/Booking'));\r\nconst DefaultHeader = React.lazy(() => import('./views/DefaultHeader'));\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <React.Suspense fallback={loading()}>\r\n        <div className='layoutAntd'>\r\n\r\n          <DefaultHeader />\r\n          <Content className='contentAntd'>\r\n\r\n            <Switch>\r\n              <Route exact path='/booking'>\r\n                <Booking />\r\n              </Route>\r\n              <Route path='/booking/complete'>\r\n                <BookingComplete />\r\n              </Route>\r\n            </Switch>\r\n          </Content>\r\n          <Footer className='container-xxl footerAntd' style={{ backgroundColor: '#1e1e1e' }}>\r\n            Footer\r\n          </Footer>\r\n        </div >\r\n      </React.Suspense>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport './index.css';\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\n\r\nimport 'moment/locale/ru';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport ruRU from 'antd/lib/locale/ru_RU';\r\nimport moment from 'moment';\r\n\r\nmoment.locale('ru');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ConfigProvider locale={ruRU}>\r\n      <App style={{ height: '100%' }} />\r\n    </ConfigProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","import React from 'react';\r\nimport '../less/title.less'\r\n\r\nconst Title = (props) => {\r\n    return (\r\n        <div className=\"row title\">\r\n            <div className=\"col-lg-12 ms-auto title__title\">\r\n                <h1 className='title__text mx-auto' >\r\n                    {props.mainTitle.toUpperCase()}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Title;","import { makeAutoObservable } from 'mobx';\r\nimport axios from 'axios';\r\n\r\n\r\nclass BookingCompleteStore {\r\n\r\n    booking = undefined;\r\n    bookingComplete = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    checkBooking = async (cipherId) => {\r\n        let body = {\r\n            cipherId: cipherId\r\n        };\r\n        let response = await axios.post('/api/booking/check', body);\r\n        console.log(response.data.data)\r\n        this.booking = response.data.data;\r\n    }\r\n\r\n    completeBooking = async (cipherId) => {\r\n        let body = {\r\n            statusId: 2,\r\n            cipherId: cipherId\r\n        }\r\n        let response  = await axios.post('/api/booking/complete', body);\r\n        if(response.data.success)\r\n            this.bookingComplete = true;\r\n    }\r\n\r\n}\r\n\r\nexport default BookingCompleteStore;","import { makeAutoObservable, configure } from 'mobx';\r\n// import { notification } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst moment = require('moment');\r\n\r\n// configure({\r\n//     enforceActions: \"never\",\r\n// })\r\n\r\nclass BookingStore {\r\n\r\n    stage = 1;\r\n\r\n    minDate = moment().startOf('day').add(1, 'days').toDate();\r\n    startDate = moment().startOf('day').add(1, 'days'); //дата заезда\r\n    endDate = moment().startOf('day').add(2, 'days');// дата выезда\r\n    nights = 1; //ночей\r\n    adults = 2; //взрослых\r\n    children = 0; //детей\r\n    room = undefined; //номер\r\n\r\n    personInfo = {\r\n        name: '',\r\n        surname: '',\r\n        fathersName: '',\r\n        email: '',\r\n        phone: '',\r\n        comment: ''\r\n    };\r\n    transfer = false;\r\n\r\n    childrenOptions = [0, 1];\r\n    adultsOptions = [1, 2, 3];\r\n    enableButton = true;\r\n    hideAlert = true;\r\n\r\n    rooms = [];\r\n\r\n    range = [{\r\n        startDate: this.startDate.toDate(),\r\n        endDate: this.endDate.toDate(),\r\n        key: 'selection'\r\n    }];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    changeStartDate = (value) => {\r\n        let days = this.endDate.diff(this.startDate, 'days');\r\n        let tommorow = moment().add(1, 'days');;\r\n\r\n        if (value < tommorow) {\r\n            value = tommorow;\r\n        }\r\n\r\n        this.startDate = value.startOf('day').utc(true);\r\n        this.endDate = moment(this.startDate).add(days, 'days');\r\n        this.nights = days;\r\n\r\n        this.updateRange();\r\n    };\r\n\r\n    changeEndDate = (value) => {\r\n        if (value <= this.startDate) {\r\n            value = moment(this.startDate).add(1, 'days');\r\n        }\r\n        this.endDate = value.startOf('day').utc(true);\r\n\r\n        let days = value.diff(this.startDate, 'days');\r\n        this.nights = days;\r\n\r\n        this.updateRange();\r\n    };\r\n\r\n    updateRange = () => {\r\n        let range = {\r\n            startDate: this.startDate.toDate(),\r\n            endDate: this.endDate.toDate(),\r\n            key: 'selection'\r\n        };\r\n        this.range = [range];\r\n    };\r\n\r\n    changeRange = (value) => {\r\n        this.range = [value];\r\n\r\n        this.startDate = moment(value.startDate).utc(true);\r\n        this.endDate = moment(value.endDate).utc(true);\r\n        this.nights = moment(value.endDate).diff(moment(value.startDate), 'days');\r\n\r\n        this.checkEnableButton();\r\n    };\r\n\r\n    changeAdults = (value) => {\r\n        this.adults = value;\r\n        let arr = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            if ((i + value) <= 3)\r\n                arr.push(i)\r\n        }\r\n        this.childrenOptions = arr;\r\n    };\r\n\r\n    changeChildren = (value) => {\r\n        this.children = value;\r\n        let arr = [];\r\n        for (let i = 1; i < 4; i++) {\r\n            if ((i + value) <= 3)\r\n                arr.push(i)\r\n        }\r\n        this.adultsOptions = arr;\r\n    };\r\n\r\n    changeNights = (value) => {\r\n        this.nights = Math.round(value);\r\n        this.endDate = moment(this.startDate).add(this.nights, 'days');\r\n        this.updateRange();\r\n    };\r\n\r\n    checkEnableButton = () => {\r\n        if (this.nights > 0)\r\n            this.enableButton = true;\r\n        else\r\n            this.enableButton = false;\r\n    }\r\n\r\n    findRooms = async () => {\r\n        this.stage = 2;\r\n        let response = await axios.post('/api/booking/getRooms',\r\n            { start: this.startDate, end: this.endDate });\r\n        this.rooms = await response.data;\r\n    }\r\n\r\n    chooseRoom = async (room) => {\r\n        this.room = room;\r\n        this.stage = 3;\r\n    }\r\n\r\n    goToStage = (stageNo) => {\r\n        if ((stageNo < this.stage) && this.stage !== 4) {\r\n            this.stage = stageNo\r\n\r\n            if (stageNo === 1) {\r\n                this.room = undefined;\r\n                this.rooms = [];\r\n            };\r\n        }\r\n    }\r\n\r\n    changeValue = (value, field) => {\r\n        this.personInfo[field] = value;\r\n    }\r\n\r\n    setTransfer = (e) => {\r\n        this.transfer = e.target.checked;\r\n    }\r\n\r\n    checkFields = () => {\r\n        if (this.personInfo.name.replace(/\\s/g, '').length === 0 ||\r\n            this.personInfo.surname.replace(/\\s/g, '').length === 0 ||\r\n            (this.personInfo.phone.replace(/\\s/g, '').length < 5 ||\r\n                this.personInfo.phone.replace(/\\s/g, '').length > 12) ||\r\n            this.personInfo.email.match(/.+@.+\\..+/) === null\r\n        )\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    sendBookingRequest = async () => {\r\n        let check = await this.checkFields();\r\n        if (!check)\r\n            this.hideAlert = false;\r\n        else {\r\n            let totalAmount = +this.room.price * +this.nights;\r\n            totalAmount += this.transfer ? 3000 : 0;\r\n            let data = {\r\n                startDate: this.startDate,\r\n                endDate: this.endDate,\r\n                adults: this.adults,\r\n                children: this.children,\r\n                room: this.room.id,\r\n                name: this.personInfo.name,\r\n                surname: this.personInfo.surname,\r\n                fathersName: this.personInfo.fathersName,\r\n                email: this.personInfo.email,\r\n                phone: this.personInfo.phone,\r\n                comment: this.personInfo.comment,\r\n                transfer: this.transfer,\r\n                totalAmount: totalAmount\r\n            }\r\n            let response = await axios.post('/api/booking/saveRequest', data);\r\n            if (response.data?.success) {\r\n                this.stage = 4;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default BookingStore;","import React from 'react';\r\nimport BookingCompleteStore from './BookingCompleteStore';\r\nimport BookingStore from './BookingStore'\r\n\r\nexport const storesContext = React.createContext({\r\n    BookingStore: new BookingStore(),\r\n    BookingCompleteStore: new BookingCompleteStore()\r\n})","import React from 'react'\r\nimport { storesContext } from './Stores/storesContext';\r\n\r\nexport const useStores = () => React.useContext(storesContext)"],"sourceRoot":""}